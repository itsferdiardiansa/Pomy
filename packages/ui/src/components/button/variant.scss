$variants: (
  'light': (
    'inverse':
      'border-gray-600 text-gray-600 hover:bg-gray-600 hover:text-gray-50',
    'base': 'bg-light text-gray-600',
  ),
  'primary': (
    'inverse':
      'border-blue-600 text-blue-800 hover:bg-primary hover:text-gray-50',
    'base': 'bg-primary hover:bg-blue-800 text-gray-200',
  ),
  'danger': (
    'inverse': 'border-red-600 text-red-600 hover:bg-danger hover:text-gray-50',
    'base': 'bg-danger hover:bg-red-800 text-gray-200',
  ),
  'warning': (
    'inverse':
      'border-yellow-600 text-yellow-600 hover:bg-warning hover:text-gray-50',
    'base': 'bg-warning hover:bg-yellow-500 text-gray-100',
  ),
  'success': (
    'inverse':
      'border-green-600 text-green-600 hover:bg-success hover:text-gray-50',
    'base': 'bg-success hover:bg-green-600 text-gray-200',
  ),
  'dark': (
    'inverse': 'border-gray-600 text-gray-600 hover:bg-dark hover:text-gray-50',
    'base': 'bg-dark hover:bg-gray-800 text-gray-200',
  ),
  'orange': (
    'inverse':
      'border-orange text-orange hover:bg-orange-dark hover:text-gray-50',
    'base': 'bg-orange hover:bg-orange-dark text-white',
  ),
);

@mixin mergeChildContent($selectorClass, $childColor: 'text-gray-100') {
  #{$selectorClass} {
    @content;
  }
}

@mixin variant {
  @each $key, $tailwindClass in $variants {
    @include mergeChildContent('&--#{$key}') {
      @apply #{map-get($tailwindClass, 'base')} fill-current focus:outline-none;

      &-inverse {
        @apply bg-transparent border #{map-get($tailwindClass, 'inverse')};
      }
    }
  }
}
